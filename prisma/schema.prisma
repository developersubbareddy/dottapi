// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model JsonList {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)
  key  String @db.VarChar(255)
  list String @db.VarChar
}

model Channel {
  id           Int      @id @default(autoincrement())
  title        String   @db.VarChar(255)
  description  String   @db.VarChar
  logo         String   @db.VarChar
  videos       Video[]
  ownerAddress String   @db.VarChar(255)
  createdDate  DateTime @updatedAt
}

model Video {
  id            Int         @id @default(autoincrement())
  title         String      @db.VarChar(255)
  description   String      @db.VarChar
  category      String?     @db.VarChar(255)
  subCategory   String?     @db.VarChar(255)
  genres        String?     @db.VarChar(255)
  audioLanguage String?     @db.VarChar
  cid           String      @db.VarChar
  channelId     Int
  channel       Channel     @relation(fields: [channelId], references: [id])
  locked        Boolean     @default(false)
  price         Int         @default(0)
  isFreeVideo   Boolean     @default(false)
  comments      Comment[]
  views         VideoView[]
  createdDate   DateTime    @updatedAt
}

model Subscription {
  id                Int      @id @default(autoincrement())
  channelId         Int
  subscriberAddress String   @db.VarChar(255)
  createdDate       DateTime @updatedAt
}

model Comment {
  id          Int            @id @default(autoincrement())
  address     String         @db.VarChar
  comment     String         @db.VarChar
  videoId     Int
  video       Video          @relation(fields: [videoId], references: [id])
  replies     CommentReply[]
  createdDate DateTime       @updatedAt
}

model CommentReply {
  id          Int      @id @default(autoincrement())
  reply       String   @db.VarChar
  commentId   Int
  comment     Comment  @relation(fields: [commentId], references: [id])
  createdDate DateTime @updatedAt
}

model VideoView {
  id      Int     @id @default(autoincrement())
  address String? @db.VarChar(255)
  videoId Int
  video   Video   @relation(fields: [videoId], references: [id])
}

model Rating {
  id               Int     @id @default(autoincrement())
  address          String? @db.VarChar(255)
  videoOrChannelId Int
  rating           Int     @default(0)
}
